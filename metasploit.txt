Metasploit:
	Auxiliary:
		Any supporting module, such as scanners, crawlers and fuzzers, can be found here.
	Encoders:
		Encoders will allow you to encode the exploit and payload in the hope that a signature-based antivirus solution may miss them.
	Evasion:
		While encoders will encode the payload, they should not be considered a direct attempt to evade antivirus software. On the other hand, “evasion” modules will try that, with more or less success.
	Exploits:
		Exploits, neatly organized by target system.
	NOPs:
		NOPs (No OPeration) do nothing, literally. They are represented in the Intel x86 CPU family they are represented with 0x90, following which the CPU will do nothing for one cycle. They are often used as a buffer to achieve consistent payload sizes.
	Payloads:
		Payloads are codes that will run on the target system.
			Adapters: An adapter wraps single payloads to convert them into different formats. For example, a normal single payload can be wrapped inside a Powershell adapter, which will make a single powershell command that will execute the payload.
			Singles: Self-contained payloads (add user, launch notepad.exe, etc.) that do not need to download an additional component to run.
			Stagers: Responsible for setting up a connection channel between Metasploit and the target system. Useful when working with staged payloads. “Staged payloads” will first upload a stager on the target system then download the rest of the payload (stage). This provides some advantages as the initial size of the payload will be relatively small compared to the full payload sent at once.
			Stages: Downloaded by the stager. This will allow you to use larger sized payloads.
	Post:
		Post modules will be useful on the final stage of the penetration testing process listed above, post-exploitation.
start metasploit console:
	msfconsole		
use module:	
	use exploit/windows/smb/ms17_010_eternalblue	
info anzeigen:
	show <options,payloads,...>
leave context:
	back
get info(description...)
	info <module>
search for sth:
	search <module>
set parameter:
	set <PARAMETER_NAME> <VALUE>
clear parameter:
	unset <PARAMETER_NAME>
for all modules:
	setg
	unsetg
lounch the module:
	exploit
	run
	
Module Rankings:
	https://tryhackme-images.s3.amazonaws.com/user-uploads/603df7900d7b6f1dff18b0bd/room-content/a88c8d37283878e01447853a68578deb.png
	
	
Parameters often used:
	RHOSTS: “Remote host”, the IP address of the target system. A single IP address or a network range can be set. This will support the CIDR (Classless Inter-Domain Routing) notation (/24, /16, etc.) or a network range (10.10.10.x – 10.10.10.y). You can also use a file where targets are listed, one target per line using file:/path/of/the/target_file.txt, as you can see below.
	RPORT: “Remote port”, the port on the target system the vulnerable application is running on.
	PAYLOAD: The payload you will use with the exploit.
	LHOST: “Localhost”, the attacking machine (your AttackBox or Kali Linux) IP address.
	LPORT: “Local port”, the port you will use for the reverse shell to connect back to. This is a port on your attacking machine, and you can set it to any port not used by any other application.
	SESSION: Each connection established to the target system using Metasploit will have a session ID. You will use this with post-exploitation modules that will connect to the target system using an existing connection.
